# –ò–º–ø–æ—Ä—Ç—ã Flask
from flask import Blueprint, render_template, redirect, url_for, flash, request, jsonify

# –ò–º–ø–æ—Ä—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
from app import db
from app.models import View, Article
from app.forms import ViewForm

# üîπ –°–æ–∑–¥–∞–Ω–∏–µ Blueprint –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–æ–≤
main = Blueprint('main', __name__)

# üîπ –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –í–∏–¥–∞ –∏–∑–¥–µ–ª–∏—è
@main.route('/add_view', methods=['GET', 'POST'])
def add_view():
    form = ViewForm()
    if form.validate_on_submit():
        # –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –í–∏–¥
        existing_view = View.query.filter_by(name=form.name.data).first()
        if existing_view:
            flash('–¢–∞–∫–æ–π –≤–∏–¥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!', 'warning')
            return redirect(url_for('main.index'))

        # –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –í–∏–¥
        new_view = View(name=form.name.data)
        db.session.add(new_view)
        db.session.commit()
        flash('–í–∏–¥ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', 'success')
        return redirect(url_for('main.index'))

    # –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –í–∏–¥–∞
    return render_template('add_view.html', form=form)

# üîπ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –í–∏–¥–æ–≤ –∏–∑–¥–µ–ª–∏–π
@main.route('/')
def index():
    views = View.query.order_by(View.name).all()
    return render_template('index.html', views=views)

# üîπ –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –í–∏–¥–∞ –∏–∑–¥–µ–ª–∏—è
@main.route('/edit_view/<int:view_id>', methods=['GET', 'POST'])
def edit_view(view_id):
    view = View.query.get_or_404(view_id)

    if request.method == 'POST':
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
        new_name = request.form.get('name')
        new_description = request.form.get('description')

        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è –í–∏–¥–∞
        view.name = new_name
        view.description = new_description

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.session.commit()
        flash('–í–∏–¥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω', 'success')
        return redirect(url_for('main.index'))

    # –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    return render_template('edit_view.html', view=view)

# üîπ –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ê—Ä—Ç–∏–∫—É–ª–∞
@main.route('/generator', methods=['POST'])
def generator():
    article_code = request.form.get('article_code')
    description = request.form.get('article_description')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –∫–æ–¥ –∞—Ä—Ç–∏–∫—É–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É—Å—Ç—ã–º
    if not article_code:
        flash('–û—à–∏–±–∫–∞: –ö–æ–¥ –∞—Ä—Ç–∏–∫—É–ª–∞ –ø—É—Å—Ç–æ–π.', 'danger')
        return redirect(url_for('main.index'))  # ‚ùó –õ—É—á—à–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, –∞ –Ω–µ –Ω–∞ —Å–ø–∏—Å–æ–∫

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∞—Ä—Ç–∏–∫—É–ª
    existing = Article.query.filter_by(code=article_code).first()
    if existing:
        flash('–¢–∞–∫–æ–π –∞—Ä—Ç–∏–∫—É–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!', 'warning')
    else:
        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–∞
        new_article = Article(code=article_code, description=description)
        db.session.add(new_article)
        db.session.commit()
        flash('–ê—Ä—Ç–∏–∫—É–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.', 'success')

    return redirect(url_for('main.list_articles'))

# üîπ –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤
@main.route('/articles')
def list_articles():
    articles = Article.query.order_by(Article.id.desc()).all()
    return render_template('list_articles.html', articles=articles)

# üîπ –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –¥–ª—è –∞—Ä—Ç–∏–∫—É–ª–∞
@main.route('/get_prefix', methods=['POST'])
def get_prefix():
    partial_code = request.json.get('partial_code')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: partial_code –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞–ª–∏–¥–Ω—ã–º
    if not partial_code or not isinstance(partial_code, str):
        return jsonify({'error': 'Invalid partial_code'}), 400

    # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å partial_code
    matches = Article.query.filter(Article.code.like(f"{partial_code}%")).all()

    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã
    existing_prefixes = [int(a.code.split('-')[-1]) for a in matches if a.code.split('-')[-1].isdigit()]

    # –í—ã—á–∏—Å–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å
    next_prefix = max(existing_prefixes, default=0) + 1

    return jsonify({'prefix': next_prefix})
