# app/admin.py

from flask_admin import Admin, AdminIndexView
from flask_admin.contrib.sqla import ModelView
from flask_login import current_user
from flask import redirect, url_for, flash
from app.extensions import db
from app.models import View, Category, Article, User, Color, Model



# üîê –ó–∞—â–∏—â—ë–Ω–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å ‚Äî –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º
class SecureModelView(ModelView):
    def is_accessible(self):
        return current_user.is_authenticated and current_user.role == 'admin'

    def inaccessible_callback(self, name, **kwargs):
        flash("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É.", "warning")
        return redirect(url_for('auth.login'))

# ‚úÖ –î–ª—è –º–æ–¥–µ–ª–∏ Article (–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å)
class ArticleManagerView(ModelView):
    column_filters = ['code', 'description', 'level', 'weight_real', 'weight_code']
    column_searchable_list = ['code', 'description']
    column_sortable_list = ['code', 'level', 'weight_real', 'weight_code']
    column_labels = {
        'code': '–ê—Ä—Ç–∏–∫—É–ª',
        'description': '–û–ø–∏—Å–∞–Ω–∏–µ',
        'level': '–£—Ä–æ–≤–µ–Ω—å',
        'weight_real': '–í–µ—Å (—Ç–æ—á–Ω—ã–π)',
        'weight_code': '–í–µ—Å (–≤ –∫–æ–¥–µ)'
    }

    def is_accessible(self):
        return current_user.is_authenticated and current_user.role in ['admin', 'manager']

    def inaccessible_callback(self, name, **kwargs):
        flash("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É.", "warning")
        return redirect(url_for('auth.login'))

# ‚úÖ –ù–æ–≤—ã–π ‚Äî –¥–ª—è –º–æ–¥–µ–ª–∏ Color
class ColorManagerView(ModelView):
    column_filters = ['name', 'code']
    column_searchable_list = ['name', 'code']
    column_sortable_list = ['name', 'code']
    column_labels = {
        'name': '–ù–∞–∑–≤–∞–Ω–∏–µ',
        'code': '–ö–æ–¥'
    }

    def is_accessible(self):
        return current_user.is_authenticated and current_user.role in ['admin', 'manager']

    def inaccessible_callback(self, name, **kwargs):
        flash("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É.", "warning")
        return redirect(url_for('auth.login'))




class SecureAdminIndexView(AdminIndexView):
    def is_accessible(self):
        return current_user.is_authenticated and current_user.role == 'admin'

    def inaccessible_callback(self, name, **kwargs):
        flash("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.", "danger")
        return redirect(url_for('auth.login'))


# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∞–¥–º–∏–Ω–∫–∏
admin = Admin(name='Vittavento Admin', template_mode='bootstrap4', index_view=SecureAdminIndexView())

# –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–µ–ª–∏
def init_admin(app):
    admin.init_app(app)
    admin.add_view(SecureModelView(View, db.session, name="–í–∏–¥—ã"))
    admin.add_view(SecureModelView(Category, db.session, name="–ö–∞—Ç–µ–≥–æ—Ä–∏–∏"))
    admin.add_view(SecureModelView(Model, db.session, name="–ú–æ–¥–µ–ª–∏"))
    admin.add_view(ArticleManagerView(Article, db.session, name="–ê—Ä—Ç–∏–∫—É–ª—ã"))
    admin.add_view(ColorManagerView(Color, db.session, name="–¶–≤–µ—Ç–∞"))  # ‚úÖ –∑–¥–µ—Å—å –±—ã–ª–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ
    admin.add_view(SecureModelView(User, db.session, name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"))


